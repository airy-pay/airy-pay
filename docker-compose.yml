services:
  airypay.discord:
    image: airypay.discord:latest
    environment:
      - "DISCORD_TOKEN=${DISCORD_TOKEN}"
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
      - "POSTGRES_HOST=postgres"
      - "POSTGRES_PORT=5432"
      - "RABBITMQ_HOST=rabbitmq"
      - "RABBITMQ_USER=${RABBITMQ_USER}"
      - "RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}"
      - "RABBITMQ_PORT=${RABBITMQ_PORT}"
      - "RABBITMQ_WEB_PORT=${RABBITMQ_WEB_PORT}"
    build:
      context: .
      dockerfile: src/AiryPay.Discord/Dockerfile
    volumes:
      - ./src:/app/src
      - ./appsettings.json:/app/appsettings.json:ro
      - ./paymentsettings.yaml:/app/paymentsettings.yaml:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: always
  
  airypay.web:
    image: airypay.web:latest
    environment:
      - "RABBITMQ_HOST=rabbitmq"
      - "RABBITMQ_USER=${RABBITMQ_USER}"
      - "RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}"
      - "RABBITMQ_PORT=${RABBITMQ_PORT}"
      - "RABBITMQ_WEB_PORT=${RABBITMQ_WEB_PORT}"
    build:
      context: .
      dockerfile: src/AiryPay.Web/Dockerfile
    volumes:
      - ./src:/app/src
      - ./appsettings.json:/app/appsettings.json:ro
      - ./paymentsettings.yaml:/app/paymentsettings.yaml:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "80:80"
    restart: always
  
  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "${RABBITMQ_PORT}:5672"       # AMQP port
      - "${RABBITMQ_WEB_PORT}:15672"  # Web management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: always
  
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_OUTER_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: always

volumes:
  pgdata:
